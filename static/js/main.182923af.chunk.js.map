{"version":3,"sources":["components/Cart/CartItem/index.js","components/Cart/WhatsAppButton/OrderLinkGenerator.js","components/Cart/WhatsAppButton/index.js","components/Cart/index.js","components/Catalog/CatalogHeader/index.js","components/Catalog/Product/index.js","components/Catalog/CatalogBody/index.js","components/Catalog/index.js","index.js"],"names":["CartItem","productId","product","increaseMethod","decreaseMethod","className","name","amount","price","toLocaleString","currency","width","onClick","GenerateOrderLinkForWhatsApp","products","encodedMessage","encodeURI","message","index","length","totalProductPrice","total","reduce","next","CreateOrderMessageForWhatsApp","WhatsAppButton","id","href","color","size","Cart","props","document","getElementById","style","display","this","closeCart","span","map","i","key","React","Component","CatalogHeader","Product","src","process","imagePath","alt","CatalogBody","openCartMethod","Catalog","increaseProductAmount","state","setState","decreaseProductAmount","handleOpenCart","productsData","ReactDOM","render"],"mappings":"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","file":"static/js/main.182923af.chunk.js","sourcesContent":["import React from 'react';\nimport { PlusCircle, MinusCircle } from 'react-feather';\n\nfunction CartItem({ productId, product, increaseMethod, decreaseMethod }) {\n    return (\n        <tr className=\"cart-item\">\n            <td>\n                <p className=\"cart-item-name\">{product.name}</p>\n            </td>\n            <td>\n                {product.amount}\n            </td>\n            <td>\n                R$ {(product.amount * product.price).toLocaleString({currency: \"BRL\"})}\n            </td>\n            <td>\n                <div className=\"cart-item-buttons\">\n                    <PlusCircle \n                        className=\"cart-button\" \n                        width={20} \n                        onClick={() => increaseMethod(productId)}\n                    />\n                    <MinusCircle \n                        className=\"cart-button\" \n                        width={20} \n                        onClick={() => decreaseMethod(productId)}\n                    />\n                </div>\n            </td>\n        </tr>\n    );\n}\n\nexport default CartItem;","function GenerateOrderLinkForWhatsApp(products) {\n    const phoneNumber = '5538988484205';\n    const encodedMessage = encodeURI(CreateOrderMessageForWhatsApp(products));\n\n    const link = `https://wa.me/${phoneNumber}?text=${encodedMessage}`;\n    return link;\n}\n\nfunction CreateOrderMessageForWhatsApp(products) {\n    let message = 'Olá! Desejo fazer um pedido: \\n\\n';\n\n    for (let index = 0; index < products.length; index++) {\n        const product = products[index];\n\n        if (product.amount > 0) {\n            var totalProductPrice = \n                (product.amount * product.price)\n                .toLocaleString({currency: 'BRL'});\n\n            message += `${product.name}: R$ ${totalProductPrice} (${product.amount} unid.)\\n`;\n        }\n    }\n\n    const total = \n        products\n        .reduce((total, next) => total + (next.price * next.amount), 0)\n        .toLocaleString({currency: \"BRL\"});\n\n    message += `\\n*TOTAL: R$ ${total}*\\n`;\n\n    return message;\n}\n\nexport default GenerateOrderLinkForWhatsApp;","import React from 'react';\nimport GenerateOrderLinkForWhatsApp from './OrderLinkGenerator';\nimport { FaWhatsapp } from 'react-icons/fa';\n\nfunction WhatsAppButton({ products }) {\n    return (\n        <div id=\"whatsapp-container\">\n            <a \n                id=\"whatsapp-button\" \n                href={GenerateOrderLinkForWhatsApp(products)}\n            >\n                Enviar o pedido \n                <FaWhatsapp \n                    color=\"white\" \n                    size={25} \n                    className=\"icon\" \n                />\n            </a>\n        </div>\n    );\n}\n\nexport default WhatsAppButton;","import React from 'react';\n\nimport CartItem from './CartItem';\nimport WhatsAppButton from './WhatsAppButton'\n\nimport { XCircle } from 'react-feather';\nimport './stylesheet.css';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.products = props.products;\n        this.increaseMethod = props.increaseMethod;\n        this.decreaseMethod = props.decreaseMethod;\n    }\n    \n    closeCart() {\n        const cartElement = document.getElementById('cart-panel');\n        cartElement.style.display = \"none\";\n    }\n\n    render() {\n        return (\n            <div id=\"cart-panel\">\n                <div id=\"cart-content\">\n                    <div id=\"cart-header\">\n                        <XCircle className=\"close-button\" onClick={this.closeCart} />\n                        <h1>Carrinho</h1>\n                    </div>\n                    <div id=\"cart-items\">\n                        <table>\n                            <colgroup>\n                                <col span=\"1\" style={{width: '30%'}}/>\n                                <col span=\"1\" style={{width: '15%'}}/>\n                                <col span=\"1\" style={{width: '30%'}}/>\n                                <col span=\"1\" style={{width: '30%'}}/>\n                            </colgroup>\n                            <tbody>\n                                <tr>\n                                    <th>Produto</th>\n                                    <th>Quant.</th>\n                                    <th>Preço</th>\n                                    <th>Ações</th>\n                                </tr>\n                                {this.products.map((product, i) => {\n                                    if (product.amount > 0) {\n                                        return (\n                                            <CartItem \n                                                key={i}\n                                                productId={i}\n                                                product={product} \n                                                increaseMethod={this.increaseMethod} \n                                                decreaseMethod={this.decreaseMethod} \n                                            />\n                                        );\n                                    }\n                                    return null;\n                                })}\n                                <tr>\n                                    <td><b>Total</b></td>\n                                    <td>\n                                        {this.products.reduce((total, next) => {\n                                            return total + next.amount;\n                                        }, 0)}\n                                    </td>\n                                    <td className=\"total-price\">\n                                        R$ {this.products.reduce((total, next) => {\n                                            return total + (next.price * next.amount);\n                                        }, 0)\n                                        .toLocaleString({currency: \"BRL\"})}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <WhatsAppButton products={this.products} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\nimport { ShoppingCart } from 'react-feather';\n\nfunction CatalogHeader(props) {\n    return (\n        <header>\n            <h1 className=\"title\">Catálogo Online</h1>\n            <button id=\"shopping-cart-button\" onClick={props.onClick}>\n                <ShoppingCart color=\"white\" size={20} />\n            </button>\n        </header>\n    );\n}\n\nexport default CatalogHeader;","import React from 'react';\nimport './stylesheet.css';\n\nfunction Product(props) {\n    return (\n        <div className=\"product-item\" onClick={props.onClick}>\n            <div className=\"counter\">{props.product.amount}</div>\n            <div className=\"image-container\">\n                <img src={process.env.PUBLIC_URL + props.product.imagePath} alt=\"Product\"></img>\n            </div>\n            <div className=\"details\">\n                <p className=\"product-name\">{props.product.name}</p>\n                <p className=\"product-price\">R$ {props.product.price.toLocaleString({currency: \"BRL\"})}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Product;","import React from 'react';\nimport Product from '../Product';\nimport { ShoppingCart } from 'react-feather';\n\nfunction CatalogBody({ products, increaseMethod, openCartMethod }) {\n    return (\n        <div>\n            <p className=\"subtitle\">Olá! Selecione os produtos desejados:</p>\n            <div id=\"products-container\">\n                {products.map((product, i) => (\n                    <Product \n                        key={i}\n                        product={product} \n                        onClick = {() => increaseMethod(i)}\n                    />\n                ))}\n            </div>\n            <div id=\"cart-access-container\">\n                <button id=\"cart-access-button\" onClick={openCartMethod}>\n                    Acessar o carrinho\n                    <ShoppingCart color=\"white\" size={20} className=\"icon\" />\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default CatalogBody;","import React from 'react';\n\nimport Cart from '../Cart';\nimport CatalogHeader from './CatalogHeader';\nimport CatalogBody from './CatalogBody';\n\nimport productsData from '../../data/products.json';\nimport './stylesheet.css';\n\nclass Catalog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: productsData.map((product) => ({ ...product, amount: 0 }))\n        };\n    }\n    \n    increaseProductAmount = (i) => {\n        const products = this.state.products;\n        products[i].amount++;\n       \n        this.setState({\n            products: products\n        });\n    }\n    \n    decreaseProductAmount = (i) => {\n        const products = this.state.products;\n        products[i].amount--;\n       \n        this.setState({\n            products: products\n        });\n    }\n    \n    handleOpenCart = () => {\n        const cart = document.getElementById('cart-panel');\n        cart.style.display = \"block\";\n    }\n\n    render() {\n        return (\n            <>\n                <CatalogHeader onClick={this.handleOpenCart} />\n                <CatalogBody \n                    products={this.state.products} \n                    increaseMethod={this.increaseProductAmount} \n                    openCartMethod={this.handleOpenCart}\n                />\n                <Cart \n                    products={this.state.products} \n                    increaseMethod={this.increaseProductAmount}     \n                    decreaseMethod={this.decreaseProductAmount}     \n                />\n            </>\n        );\n    }\n}\n\nexport default Catalog;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Catalog from './components/Catalog';\nimport './global.css';\n\nReactDOM.render(\n    <Catalog />,\n    document.getElementById('root')\n);"],"sourceRoot":""}