{"version":3,"sources":["components/Catalog/CatalogHeader/index.js","components/Catalog/Product/index.js","components/Catalog/CatalogBody/index.js","components/Cart/CartItem/index.js","components/Cart/CartTable/index.js","components/Cart/index.js","components/AddressPanel/AddressForm/index.js","components/AddressPanel/WhatsAppButton/index.js","components/AddressPanel/WhatsAppButton/OrderLinkGenerator.js","components/AddressPanel/index.js","components/Catalog/index.js","index.js"],"names":["CatalogHeader","props","className","id","onClick","color","size","Product","product","amount","src","process","imagePath","alt","name","price","toLocaleString","currency","CatalogBody","products","increaseMethod","openCartMethod","map","i","key","CartItem","productId","decreaseMethod","width","CartTable","span","style","reduce","total","next","Cart","openAddressPanel","closeCart","document","getElementById","display","this","React","Component","AddressForm","setAddressMethod","setAddress","nameFieldValue","value","streetFieldValue","houseNumberFieldValue","complementFieldValue","neighborhoodFieldValue","street","houseNumber","complement","neighborhood","type","placeholder","onInput","WhatsAppButton","address","link","orderMessage","message","index","length","totalProductPrice","CreateOrderMessageForWhatsApp","addressText","concat","AppendAddressToTheOrderMessage","encodedMessage","encodeURI","GenerateOrderLinkForWhatsApp","window","open","SendOrderByWhatsApp","AddressPanel","setAddressValues","setState","state","closeAddressPanel","Catalog","increaseProductAmount","decreaseProductAmount","handleOpenCart","productsData","ReactDOM","render"],"mappings":"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","file":"static/js/main.ea02b5bb.chunk.js","sourcesContent":["import React from 'react';\nimport { ShoppingCart } from 'react-feather';\n\nfunction CatalogHeader(props) {\n    return (\n        <header>\n            <h1 className=\"title\">Catálogo Online</h1>\n            <button id=\"shopping-cart-button\" onClick={props.onClick}>\n                <ShoppingCart color=\"white\" size={20} />\n            </button>\n        </header>\n    );\n}\n\nexport default CatalogHeader;","import React from 'react';\nimport './stylesheet.css';\n\nfunction Product(props) {\n    return (\n        <div className=\"product-item\" onClick={props.onClick}>\n            <div className=\"counter\">{props.product.amount}</div>\n            <div className=\"image-container\">\n                <img src={process.env.PUBLIC_URL + props.product.imagePath} alt=\"Product\"></img>\n            </div>\n            <div className=\"details\">\n                <p className=\"product-name\">{props.product.name}</p>\n                <p className=\"product-price\">R$ {props.product.price.toLocaleString({currency: \"BRL\"})}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Product;","import React from 'react';\nimport Product from '../Product';\nimport { ShoppingCart } from 'react-feather';\n\nfunction CatalogBody({ products, increaseMethod, openCartMethod }) {\n    return (\n        <div>\n            <p className=\"subtitle\">Olá! Selecione os produtos desejados:</p>\n            <div id=\"products-container\">\n                {products.map((product, i) => (\n                    <Product \n                        key={i}\n                        product={product} \n                        onClick = {() => increaseMethod(i)}\n                    />\n                ))}\n            </div>\n            <div id=\"cart-access-container\">\n                <button id=\"cart-access-button\" onClick={openCartMethod}>\n                    Acessar o carrinho\n                    <ShoppingCart color=\"white\" size={20} className=\"icon\" />\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default CatalogBody;","import React from 'react';\nimport { PlusCircle, MinusCircle } from 'react-feather';\n\nfunction CartItem({ productId, product, increaseMethod, decreaseMethod }) {\n    return (\n        <tr className=\"cart-item\">\n            <td>\n                <p className=\"cart-item-name\">{product.name}</p>\n            </td>\n            <td>\n                {product.amount}\n            </td>\n            <td>\n                R$ {(product.amount * product.price).toLocaleString({currency: \"BRL\"})}\n            </td>\n            <td>\n                <div className=\"cart-item-buttons\">\n                    <PlusCircle \n                        className=\"cart-button\" \n                        width={20} \n                        onClick={() => increaseMethod(productId)}\n                    />\n                    <MinusCircle \n                        className=\"cart-button\" \n                        width={20} \n                        onClick={() => decreaseMethod(productId)}\n                    />\n                </div>\n            </td>\n        </tr>\n    );\n}\n\nexport default CartItem;","import React from 'react';\nimport CartItem from '../CartItem';\n\nfunction CartTable ({ products, increaseMethod, decreaseMethod }) {\n    return (\n        <table>\n            <colgroup>\n                <col span=\"1\" style={{width: '30%'}}/>\n                <col span=\"1\" style={{width: '15%'}}/>\n                <col span=\"1\" style={{width: '30%'}}/>\n                <col span=\"1\" style={{width: '30%'}}/>\n            </colgroup>\n            <tbody>\n                <tr>\n                    <th>Produto</th>\n                    <th>Quant.</th>\n                    <th>Preço</th>\n                    <th>Ações</th>\n                </tr>\n                {products.map((product, i) => {\n                    if (product.amount > 0) {\n                        return (\n                            <CartItem \n                                key={i}\n                                productId={i}\n                                product={product} \n                                increaseMethod={increaseMethod} \n                                decreaseMethod={decreaseMethod} \n                            />\n                        );\n                    }\n                    return null;\n                })}\n                <tr>\n                    <td><b>Total</b></td>\n                    <td>\n                        {products.reduce((total, next) => total + next.amount, 0)}\n                    </td>\n                    <td className=\"total-price\">\n                        R$ {products.reduce((total, next) => total + (next.price * next.amount), 0)\n                        .toLocaleString({currency: \"BRL\"})}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n\nexport default CartTable;","import React from 'react';\nimport CartTable from './CartTable';\n\nimport { XCircle } from 'react-feather';\nimport './stylesheet.css';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.products = props.products;\n        this.increaseMethod = props.increaseMethod;\n        this.decreaseMethod = props.decreaseMethod;\n    }\n    \n    closeCart() {\n        const cartElement = document.getElementById('cart-panel');\n        cartElement.style.display = \"none\";\n    }\n\n    openAddressPanel = () => {\n        this.closeCart();\n        const addressPanel = document.getElementById('address-panel');\n        addressPanel.style.display = \"block\";\n    }\n\n    render() {\n        return (\n            <div id=\"cart-panel\">\n                <div id=\"cart-content\">\n                    <div id=\"cart-header\">\n                        <XCircle className=\"close-button\" onClick={this.closeCart} />\n                        <h1>Carrinho</h1>\n                    </div>\n                    <div id=\"cart-items\">\n                        <CartTable \n                            products={this.products} \n                            increaseMethod={this.increaseMethod} \n                            decreaseMethod={this.decreaseMethod} \n                        />\n                    </div>\n                    <div id=\"order-confirmation-container\">\n                        <a id=\"order-confirmation-button\" onClick={this.openAddressPanel}>\n                            Confirmar\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\n\nexport default function AddressForm({ setAddressMethod }) {\n    const setAddress = () => {\n        const nameFieldValue = document.getElementById('address-name').value;\n        const streetFieldValue = document.getElementById('address-street').value;\n        const houseNumberFieldValue = document.getElementById('address-houseNumber').value;\n        const complementFieldValue = document.getElementById('address-complement').value;\n        const neighborhoodFieldValue = document.getElementById('address-neighborhood').value;\n\n        const address = {\n            name: nameFieldValue,\n            street: streetFieldValue,\n            houseNumber: houseNumberFieldValue,\n            complement: complementFieldValue,\n            neighborhood: neighborhoodFieldValue\n        }\n\n        setAddressMethod(address);\n    };\n\n    return (\n        <div id=\"address-form-container\">\n            <div className=\"form-panel\">\n                <div className=\"form-row\">\n                    <input \n                        type=\"text\" \n                        id=\"address-name\" \n                        placeholder=\"Nome de quem receberá a entrega\" \n                        onInput={() => setAddress()}\n                    />\n                    <br />\n                </div>\n                <div className=\"form-row\">\n                    <input \n                        type=\"text\" \n                        id=\"address-street\" \n                        placeholder=\"Logradouro (rua, avenida, etc.)\" \n                        onInput={() => setAddress()}\n                    />\n                    <br />\n                </div>\n                <div className=\"form-row\">\n                    <input \n                        type=\"text\" \n                        id=\"address-houseNumber\" \n                        placeholder=\"Nº\" \n                        onInput={() => setAddress()}\n                    />\n                    <br />\n                </div>\n                <div className=\"form-row\">\n                    <input \n                        type=\"text\" \n                        id=\"address-complement\" \n                        placeholder=\"Complemento (apart, bloco, etc.)\" \n                        onInput={() => setAddress()}\n                    />\n                    <br />\n                </div>\n                <div className=\"form-row\">\n                    <input \n                        type=\"text\" \n                        id=\"address-neighborhood\" \n                        placeholder=\"Bairro\" \n                        onInput={() => setAddress()}\n                    />\n                    <br />\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport GenerateOrderLinkForWhatsApp from './OrderLinkGenerator';\nimport { FaWhatsapp } from 'react-icons/fa';\n\nexport default function WhatsAppButton({ products, address }) {\n    return (\n        <div id=\"whatsapp-container\">\n            <a \n                id=\"whatsapp-button\" \n                onClick={() => SendOrderByWhatsApp(products, address)}\n            >\n                Enviar o pedido \n                <FaWhatsapp \n                    color=\"white\" \n                    size={25} \n                    className=\"icon\" \n                />\n            </a>\n        </div>\n    );\n}\n\nfunction SendOrderByWhatsApp(products, address) {\n    const link = GenerateOrderLinkForWhatsApp(products, address);\n    window.open(link,\"_self\");\n}","export default function GenerateOrderLinkForWhatsApp(products, address) {\n    const phoneNumber = '5538988484205';\n    let orderMessage = CreateOrderMessageForWhatsApp(products);\n    orderMessage = AppendAddressToTheOrderMessage(orderMessage, address)\n\n    const encodedMessage = encodeURI(orderMessage);\n    const link = `https://wa.me/${phoneNumber}?text=${encodedMessage}`;\n    return link;\n}\n\nfunction CreateOrderMessageForWhatsApp(products) {\n    let message = 'Olá! Desejo fazer um pedido: \\n\\n*Pedido:*\\n';\n\n    for (let index = 0; index < products.length; index++) {\n        const product = products[index];\n\n        if (product.amount > 0) {\n            var totalProductPrice = \n                (product.amount * product.price)\n                .toLocaleString({currency: 'BRL'});\n\n            message += `${product.name}: R$ ${totalProductPrice} (${product.amount} unid.)\\n`;\n        }\n    }\n\n    const total = \n        products\n        .reduce((total, next) => total + (next.price * next.amount), 0)\n        .toLocaleString({currency: \"BRL\"});\n\n    message += `\\n*TOTAL: R$ ${total}*\\n`;\n\n    return message;\n}\n\nfunction AppendAddressToTheOrderMessage(orderMessage, address) {\n    const addressText = \n        \"\\n*Endereço:*\\n\" +\n        `Nome: ${address.name}\\n` +\n        `Logradouro: ${address.street}\\n` +\n        `Nº: ${address.houseNumber}\\n` +\n        `Complemento: ${address.complement}\\n` +\n        `Bairro: ${address.neighborhood}`;\n    \n    return orderMessage.concat(addressText);\n}","import React from 'react';\n\nimport AddressForm from './AddressForm';\nimport WhatsAppButton from './WhatsAppButton';\n\nimport { XCircle } from 'react-feather';\nimport './stylesheet.css';\n\nclass AddressPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.products = props.products;\n        this.state = {\n            address: {\n                name: \"\",\n                street: \"\",\n                houseNumber: \"\",\n                complement: \"\",\n                neighborhood: \"\"\n            }\n        }\n    }\n\n    setAddressValues = (address) => {\n        this.setState({address: address});\n    } \n    \n    closeAddressPanel() {\n        const addressPanel = document.getElementById('address-panel');\n        addressPanel.style.display = \"none\";\n    }\n    \n    render() {\n        return (\n            <div id=\"address-panel\">\n                <div id=\"address-content\">\n                    <div id=\"address-header\">\n                        <XCircle className=\"close-button\" onClick={this.closeAddressPanel} />\n                        <h1>Endereço</h1>\n                    </div>\n                    <AddressForm setAddressMethod={this.setAddressValues} />\n                    <WhatsAppButton \n                        products={this.products} \n                        address={this.state.address}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddressPanel;","import React from 'react';\n\nimport CatalogHeader from './CatalogHeader';\nimport CatalogBody from './CatalogBody';\nimport Cart from '../Cart';\nimport AddressPanel from '../AddressPanel';\n\nimport productsData from '../../data/products.json';\nimport './stylesheet.css';\n\nclass Catalog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: productsData.map((product) => ({ ...product, amount: 0 }))\n        };\n    }\n    \n    increaseProductAmount = (i) => {\n        const products = this.state.products;\n        products[i].amount++;\n       \n        this.setState({\n            products: products\n        });\n    }\n    \n    decreaseProductAmount = (i) => {\n        const products = this.state.products;\n        products[i].amount--;\n       \n        this.setState({\n            products: products\n        });\n    }\n    \n    handleOpenCart = () => {\n        const cart = document.getElementById('cart-panel');\n        cart.style.display = \"block\";\n    }\n\n    render() {\n        return (\n            <>\n                <CatalogHeader onClick={this.handleOpenCart} />\n                <CatalogBody \n                    products={this.state.products} \n                    increaseMethod={this.increaseProductAmount} \n                    openCartMethod={this.handleOpenCart}\n                />\n                <Cart \n                    products={this.state.products} \n                    increaseMethod={this.increaseProductAmount}     \n                    decreaseMethod={this.decreaseProductAmount}     \n                />\n                <AddressPanel products={this.state.products} />\n            </>\n        );\n    }\n}\n\nexport default Catalog;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Catalog from './components/Catalog';\nimport './global.css';\n\nReactDOM.render(\n    <Catalog />,\n    document.getElementById('root')\n);"],"sourceRoot":""}